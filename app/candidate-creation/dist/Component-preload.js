//@ui5-bundle candidatecreation/Component-preload.js
sap.ui.require.preload({
	"candidatecreation/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","candidatecreation/model/models"],(e,t)=>{"use strict";return e.extend("candidatecreation.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"candidatecreation/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("candidatecreation.controller.App",{onInit(){}})});
},
	"candidatecreation/controller/CandidateCreation.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox"],function(e,t){"use strict";return e.extend("candidatecreation.controller.CandidateCreation",{onInit:function(){let e=new sap.ui.model.json.JSONModel({firstName:"",lastName:"",birthDate:"",city:"",email:"",department:"",contractType:"",reportsTo:"",preferredLanguage:"",startDate:"",seniority:""});this.getView().setModel(e,"candidateModel")},onCreateCandidate:function(){const e=this.getOwnerComponent().getModel();const t=this.getView().getModel("candidateModel").getData();const a=[{field:"firstName",label:"Voornaam"},{field:"lastName",label:"Familienaam"},{field:"email",label:"E-mailadres"},{field:"department",label:"Afdeling"},{field:"contractType",label:"Contracttype"}];for(let e of a){if(!t[e.field]||t[e.field].toString().trim()===""){sap.m.MessageBox.error(`Het veld ${e.label} is verplicht.`);return}}const n=t.department;const r=e.bindContext(`/Departments(${n})`);r.requestObject().then(a=>{const r=a.maxRound;const o=a.code;const s=e.bindList("/Candidates",undefined,undefined,undefined,{$filter:`department_ID eq '${n}'`});s.requestContexts().then(a=>{const n=a.length;if(n>=r){sap.m.MessageBox.error(`Het maximum aantal kandidaten (${r}) voor de afdeling ${o} is al bereikt. De kandidaat kan niet worden toegevoegd.`);return}const s={firstName:t.firstName,lastName:t.lastName,birthDate:t.birthDate,city:t.city,email:t.email,department_ID:t.department,contractType_ID:t.contractType,reportsTo_ID:t.reportsTo,preferredLanguage_ID:t.preferredLanguage,startDate:t.startDate,seniority:t.seniority};console.log("Candidate Payload:",s);const i=e.bindList("/Candidates");const d=i.create(s);d.created().then(()=>{sap.m.MessageBox.success("Kandidaat met succes aangemaakt!");this._resetCandidateForm()}).catch(e=>{console.error("Error creating Candidate:",e);sap.m.MessageBox.error("Fout bij het aanmaken van de kandidaat: "+e.message)})})}).catch(e=>{console.error("Error fetching department data:",e);sap.m.MessageBox.error("Fout bij het ophalen van de afdeling gegevens: "+e.message)})},_resetCandidateForm:function(){this.getView().getModel("candidateModel").setData({firstName:"",lastName:"",birthDate:"",city:"",email:"",department:"",contractType:"",reportsTo:"",preferredLanguage:"",startDate:"",seniority:""})},onShowCandidatesPerDepartment:function(){const e=this.getOwnerComponent().getModel();if(!e){sap.m.MessageBox.error("OData-model is niet beschikbaar!");return}const t=e.bindList("/Candidates",undefined,undefined,undefined,{$apply:"groupby((department_ID),aggregate($count as count))"});t.requestContexts().then(t=>{const a=t.map(e=>e.getObject());console.log("Aantal kandidaten per afdeling:",a);const n=a.map(e=>e.department_ID);const r=e.bindList("/Departments");r.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const n=t.reduce((e,t)=>{e[t.ID]=t.description;return e},{});const r=a.map(e=>{const t=n[e.department_ID]||"Onbekend";return`Afdeling: ${t} - Aantal kandidaten: ${e.count}`}).join("\n");sap.m.MessageBox.information("Kandidaten per afdeling:\n"+r)}).catch(e=>{console.error("Error fetching departments:",e);sap.m.MessageBox.error("Fout bij het ophalen van de afdelingen: "+e.message)})}).catch(e=>{console.error("Error fetching candidates per department:",e);sap.m.MessageBox.error("Fout bij het ophalen van de gegevens: "+e.message)})}})});
},
	"candidatecreation/i18n/i18n.properties":'# This is the resource bundle for candidatecreation\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Aanmaken Kandidaat Applicatie\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=Aanmaken Kandidaat Applicatie',
	"candidatecreation/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"candidatecreation","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.16.1","toolsId":"6519b25b-1cc1-43da-bb84-910d8f1b0366"},"dataSources":{"mainService":{"uri":"/odata/v4/candidate/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}},"crossNavigation":{"inbounds":{"candidate-management-display":{"semanticObject":"candidate-management","action":"display","signature":{"parameters":{},"additionalParameters":"allowed"}}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.131.1","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"candidatecreation.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"candidatecreation.view"},"routes":[{"name":"RouteCandidateCreation","pattern":":?query:","target":["TargetCandidateCreation"]}],"targets":{"TargetCandidateCreation":{"id":"CandidateCreation","name":"CandidateCreation"}}},"rootView":{"viewName":"candidatecreation.view.App","type":"XML","id":"App"}},"sap.cloud":{"public":true,"service":"candidatemanagement.service"}}',
	"candidatecreation/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"candidatecreation/view/App.view.xml":'<mvc:View controllerName="candidatecreation.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"candidatecreation/view/CandidateCreation.view.xml":'<mvc:View controllerName="candidatecreation.controller.CandidateCreation"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"><Page id="page" title="Kandidaat Creation Applicatie"><VBox class="sapUiSmallMargin"><f:SimpleForm id="SimpleFormCandidateCreation"\n                editable="true"\n                layout="ResponsiveGridLayout"\n                title="Kandidaat aanmaken"\n                labelSpanXL="4"\n                labelSpanL="3"\n                labelSpanM="4"\n                labelSpanS="12"\n                adjustLabelSpan="false"\n                emptySpanXL="0"\n                emptySpanL="4"\n                emptySpanM="0"\n                emptySpanS="0"\n                columnsXL="2"\n                columnsL="1"\n                columnsM="1"\n                singleContainerFullSize="false"><f:content><Label text="Voornaam" /><Input value="{candidateModel>/firstName}" placeholder="Voer voornaam in" /><Label text="Familienaam" /><Input value="{candidateModel>/lastName}" placeholder="Voer familienaam in" /><Label text="Geboortedatum" /><DatePicker value="{candidateModel>/birthDate}" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd"  placeholder="Voer geboortedatum in" /><Label text="Woonplaats" /><Input value="{candidateModel>/city}" placeholder="Voer woonplaats in" /><Label text="E-mailadres" /><Input value="{candidateModel>/email}" type="Email" placeholder="Voer e-mailadres in" /><Label text="Afdeling" /><Select selectedKey="{candidateModel>/department}" items="{path: \'/Departments\'}"><core:Item key="{ID}" text="{description}" /></Select><Label text="Contracttype" /><Select selectedKey="{candidateModel>/contractType}" items="{path: \'/ContractType\'}"><core:Item key="{ID}" text="{description}" /></Select><Label text="Rapporteert naar" /><Select selectedKey="{candidateModel>/reportsTo}" items="{path: \'/Employees\'}"><core:Item key="{ID}" text="{name}" /></Select><Label text="Voorkeurstaal" /><Select selectedKey="{candidateModel>/preferredLanguage}" items="{path: \'/Languages\'}"><core:Item key="{ID}" text="{description}" /></Select><Label text="Startdatum" /><DatePicker value="{candidateModel>/startDate}" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd"  placeholder="Kies startdatum" /><Label text="AnciÃ«nniteit (in jaren)" /><Input value="{candidateModel>/seniority}" type="Number" placeholder="Voer aantal jaren in" /></f:content></f:SimpleForm><HBox justifyContent="End" class="sapUiSmallMarginTop"><Button text="Indienen" press="onCreateCandidate" type="Emphasized" /><Button text="Ingediende kandidaten bekijken" press="onShowCandidatesPerDepartment" type="Neutral" /></HBox></VBox></Page></mvc:View>\n'
});
//# sourceMappingURL=Component-preload.js.map

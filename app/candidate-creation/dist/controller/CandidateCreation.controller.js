sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox"],function(e,t){"use strict";return e.extend("candidatecreation.controller.CandidateCreation",{onInit:function(){let e=new sap.ui.model.json.JSONModel({firstName:"",lastName:"",birthDate:"",city:"",email:"",department:"",contractType:"",reportsTo:"",preferredLanguage:"",startDate:"",seniority:""});this.getView().setModel(e,"candidateModel")},onCreateCandidate:function(){const e=this.getOwnerComponent().getModel();const t=this.getView().getModel("candidateModel").getData();const a=[{field:"firstName",label:"Voornaam"},{field:"lastName",label:"Familienaam"},{field:"email",label:"E-mailadres"},{field:"department",label:"Afdeling"},{field:"contractType",label:"Contracttype"}];for(let e of a){if(!t[e.field]||t[e.field].toString().trim()===""){sap.m.MessageBox.error(`Het veld ${e.label} is verplicht.`);return}}const n=t.department;const r=e.bindContext(`/Departments(${n})`);r.requestObject().then(a=>{const r=a.maxRound;const o=a.code;const s=e.bindList("/Candidates",undefined,undefined,undefined,{$filter:`department_ID eq '${n}'`});s.requestContexts().then(a=>{const n=a.length;if(n>=r){sap.m.MessageBox.error(`Het maximum aantal kandidaten (${r}) voor de afdeling ${o} is al bereikt. De kandidaat kan niet worden toegevoegd.`);return}const s={firstName:t.firstName,lastName:t.lastName,birthDate:t.birthDate,city:t.city,email:t.email,department_ID:t.department,contractType_ID:t.contractType,reportsTo_ID:t.reportsTo,preferredLanguage_ID:t.preferredLanguage,startDate:t.startDate,seniority:t.seniority};console.log("Candidate Payload:",s);const i=e.bindList("/Candidates");const d=i.create(s);d.created().then(()=>{sap.m.MessageBox.success("Kandidaat met succes aangemaakt!");this._resetCandidateForm()}).catch(e=>{console.error("Error creating Candidate:",e);sap.m.MessageBox.error("Fout bij het aanmaken van de kandidaat: "+e.message)})})}).catch(e=>{console.error("Error fetching department data:",e);sap.m.MessageBox.error("Fout bij het ophalen van de afdeling gegevens: "+e.message)})},_resetCandidateForm:function(){this.getView().getModel("candidateModel").setData({firstName:"",lastName:"",birthDate:"",city:"",email:"",department:"",contractType:"",reportsTo:"",preferredLanguage:"",startDate:"",seniority:""})},onShowCandidatesPerDepartment:function(){const e=this.getOwnerComponent().getModel();if(!e){sap.m.MessageBox.error("OData-model is niet beschikbaar!");return}const t=e.bindList("/Candidates",undefined,undefined,undefined,{$apply:"groupby((department_ID),aggregate($count as count))"});t.requestContexts().then(t=>{const a=t.map(e=>e.getObject());console.log("Aantal kandidaten per afdeling:",a);const n=a.map(e=>e.department_ID);const r=e.bindList("/Departments");r.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const n=t.reduce((e,t)=>{e[t.ID]=t.description;return e},{});const r=a.map(e=>{const t=n[e.department_ID]||"Onbekend";return`Afdeling: ${t} - Aantal kandidaten: ${e.count}`}).join("\n");sap.m.MessageBox.information("Kandidaten per afdeling:\n"+r)}).catch(e=>{console.error("Error fetching departments:",e);sap.m.MessageBox.error("Fout bij het ophalen van de afdelingen: "+e.message)})}).catch(e=>{console.error("Error fetching candidates per department:",e);sap.m.MessageBox.error("Fout bij het ophalen van de gegevens: "+e.message)})}})});
//# sourceMappingURL=CandidateCreation.controller.js.map